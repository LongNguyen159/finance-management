# name: Build Electron App
# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:
#   build:
#     strategy:
#       matrix:
#         node-version: [20.x]  # Ensure compatibility with Electron
#         architecture: [x64, arm64]  # Target Windows x64 and macOS ARM
#     runs-on: ${{ matrix.architecture == 'x64' && 'windows-latest' || 'macos-latest' }}

#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v4

#       - name: Set up Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: ${{ matrix.node-version }}
#           cache: 'npm'

#       - name: Install Dependencies
#         run: npm ci

#       - name: Get Version from package.json
#         id: get_version
#         run: |
#           VERSION=$(node -e "console.log(require('./package.json').version)")
#           echo "VERSION=$VERSION" >> $GITHUB_ENV
#         shell: bash


#       - name: Print Version
#         run: echo "Version is ${{ env.VERSION }}"
#         shell: bash
      
#       - name: Replace Version Placeholder
#         run: |
#           if [[ "$RUNNER_OS" == "macOS" ]]; then
#             sed -i '' -e "s/__VERSION__/${{ env.VERSION }}/g" package.json
#           else
#             sed -i -e "s/__VERSION__/${{ env.VERSION }}/g" package.json
#           fi
#         shell: bash

#       - name: Build Angular App
#         run: npm run build

#       - name: Package Electron App
#         env:
#           GH_TOKEN: ${{ secrets.GH_TOKEN }}
#           VERSION: ${{ env.VERSION }}
#         run: |
#           if [ "${{ matrix.architecture }}" == "x64" ]; then
#             npm run deploy-win -- --x64 --publish never --config.extraMetadata.version=$VERSION
#           elif [ "${{ matrix.architecture }}" == "arm64" ]; then
#             npm run deploy-mac -- --arm64 --publish never --config.extraMetadata.version=$VERSION
#           fi
#         shell: bash

#       - name: Upload Build Artifacts
#         uses: actions/upload-artifact@v4
#         with:
#           name: EasySankey-Build-${{ matrix.architecture }}
#           path: |
#             releases/v${{ env.VERSION }}/win32/x64/*.exe  
#             releases/v${{ env.VERSION }}/win32/x64/*.blockmap  
#             releases/v${{ env.VERSION }}/win32/x64/latest.yml  
#             releases/v${{ env.VERSION }}/darwin/arm64/*.dmg
#             releases/v${{ env.VERSION }}/darwin/arm64/*.blockmap
#             releases/v${{ env.VERSION }}/darwin/arm64/latest-mac.yml
#           overwrite: true
